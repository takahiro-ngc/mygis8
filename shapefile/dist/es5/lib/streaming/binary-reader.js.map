{"version":3,"sources":["../../../../src/lib/streaming/binary-reader.ts"],"names":["BinaryReader","arrayBuffer","offset","bytes","byteLength","hasAvailableBytes","Error","dataView","DataView"],"mappings":";;;;;;;;;;;;;;;IAAqBA,Y;AAInB,wBAAYC,WAAZ,EAAsC;AAAA;AAAA;AAAA;AAEpC,SAAKC,MAAL,GAAc,CAAd;AAEA,SAAKD,WAAL,GAAmBA,WAAnB;AACD;;;;WAOD,2BAAkBE,KAAlB,EAA0C;AACxC,aAAO,KAAKF,WAAL,CAAiBG,UAAjB,GAA8B,KAAKF,MAAnC,IAA6CC,KAApD;AACD;;;WAQD,qBAAYA,KAAZ,EAAqC;AACnC,UAAIA,KAAK,IAAI,CAAC,KAAKE,iBAAL,CAAuBF,KAAvB,CAAd,EAA6C;AAC3C,cAAM,IAAIG,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,UAAMC,QAAQ,GAAGJ,KAAK,GAClB,IAAIK,QAAJ,CAAa,KAAKP,WAAlB,EAA+B,KAAKC,MAApC,EAA4CC,KAA5C,CADkB,GAElB,IAAIK,QAAJ,CAAa,KAAKP,WAAlB,EAA+B,KAAKC,MAApC,CAFJ;AAGA,WAAKA,MAAL,IAAeC,KAAf;AACA,aAAOI,QAAP;AACD;;;WAOD,cAAKJ,KAAL,EAA0B;AACxB,WAAKD,MAAL,IAAeC,KAAf;AACD;;;WAOD,gBAAOA,KAAP,EAA4B;AAC1B,WAAKD,MAAL,IAAeC,KAAf;AACD","sourcesContent":["export default class BinaryReader {\n  offset: number;\n  arrayBuffer: ArrayBuffer;\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    /** current global (stream) offset */\n    this.offset = 0;\n    /** current buffer from iterator */\n    this.arrayBuffer = arrayBuffer;\n  }\n  /**\n   * Checks if there are available bytes in data\n   *\n   * @param bytes\n   * @returns boolean\n   */\n  hasAvailableBytes(bytes: number): boolean {\n    return this.arrayBuffer.byteLength - this.offset >= bytes;\n  }\n\n  /**\n   * Get the required number of bytes from the iterator\n   *\n   * @param bytes\n   * @returns Dataview\n   */\n  getDataView(bytes: number): DataView {\n    if (bytes && !this.hasAvailableBytes(bytes)) {\n      throw new Error('binary data exhausted');\n    }\n\n    const dataView = bytes\n      ? new DataView(this.arrayBuffer, this.offset, bytes)\n      : new DataView(this.arrayBuffer, this.offset);\n    this.offset += bytes;\n    return dataView;\n  }\n\n  /**\n   * Skipping\n   *\n   * @param bytes\n   */\n  skip(bytes: number): void {\n    this.offset += bytes;\n  }\n\n  /**\n   * Rewinding\n   *\n   * @param bytes\n   */\n  rewind(bytes: number): void {\n    this.offset -= bytes;\n  }\n}\n"],"file":"binary-reader.js"}