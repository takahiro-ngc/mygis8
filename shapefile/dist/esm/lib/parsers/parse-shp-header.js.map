{"version":3,"sources":["../../../../src/lib/parsers/parse-shp-header.ts"],"names":["LITTLE_ENDIAN","BIG_ENDIAN","SHP_MAGIC_NUMBER","parseSHPHeader","headerView","header","magic","getInt32","length","version","type","bbox","minX","getFloat64","minY","minZ","minM","maxX","maxY","maxZ","maxM","console","error"],"mappings":"AAoBA,MAAMA,aAAa,GAAG,IAAtB;AACA,MAAMC,UAAU,GAAG,KAAnB;AACA,MAAMC,gBAAgB,GAAG,UAAzB;AAQA,OAAO,SAASC,cAAT,CAAwBC,UAAxB,EAAyD;AAG9D,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEF,UAAU,CAACG,QAAX,CAAoB,CAApB,EAAuBN,UAAvB,CADM;AAGbO,IAAAA,MAAM,EAAEJ,UAAU,CAACG,QAAX,CAAoB,EAApB,EAAwBN,UAAxB,IAAsC,CAHjC;AAIbQ,IAAAA,OAAO,EAAEL,UAAU,CAACG,QAAX,CAAoB,EAApB,EAAwBP,aAAxB,CAJI;AAKbU,IAAAA,IAAI,EAAEN,UAAU,CAACG,QAAX,CAAoB,EAApB,EAAwBP,aAAxB,CALO;AAMbW,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAER,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B,CADF;AAEJc,MAAAA,IAAI,EAAEV,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B,CAFF;AAGJe,MAAAA,IAAI,EAAEX,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B,CAHF;AAIJgB,MAAAA,IAAI,EAAEZ,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B,CAJF;AAKJiB,MAAAA,IAAI,EAAEb,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B,CALF;AAMJkB,MAAAA,IAAI,EAAEd,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B,CANF;AAOJmB,MAAAA,IAAI,EAAEf,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B,CAPF;AAQJoB,MAAAA,IAAI,EAAEhB,UAAU,CAACS,UAAX,CAAsB,EAAtB,EAA0Bb,aAA1B;AARF;AANO,GAAf;;AAiBA,MAAIK,MAAM,CAACC,KAAP,KAAiBJ,gBAArB,EAAuC;AAErCmB,IAAAA,OAAO,CAACC,KAAR,sCAA4CjB,MAAM,CAACC,KAAnD;AACD;;AACD,MAAID,MAAM,CAACI,OAAP,KAAmB,IAAvB,EAA6B;AAE3BY,IAAAA,OAAO,CAACC,KAAR,iCAAuCjB,MAAM,CAACI,OAA9C;AACD;;AACD,SAAOJ,MAAP;AACD","sourcesContent":["export interface SHPHeader {\n  /** SHP Magic number */\n  magic: number;\n\n  /** Number of bytes in file */\n  length: number;\n  version: number;\n  type: number;\n  bbox: {\n    minX: number;\n    minY: number;\n    minZ: number;\n    minM: number;\n    maxX: number;\n    maxY: number;\n    maxZ: number;\n    maxM: number;\n  };\n}\n\nconst LITTLE_ENDIAN = true;\nconst BIG_ENDIAN = false;\nconst SHP_MAGIC_NUMBER = 0x0000270a;\n\n/**\n * Extract the binary header\n * Note: Also used by SHX\n * @param headerView\n * @returns SHPHeader\n */\nexport function parseSHPHeader(headerView: DataView): SHPHeader {\n  // Note: The SHP format switches endianness between fields!\n  // https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf\n  const header = {\n    magic: headerView.getInt32(0, BIG_ENDIAN),\n    // Length is stored as # of 2-byte words; multiply by 2 to get # of bytes\n    length: headerView.getInt32(24, BIG_ENDIAN) * 2,\n    version: headerView.getInt32(28, LITTLE_ENDIAN),\n    type: headerView.getInt32(32, LITTLE_ENDIAN),\n    bbox: {\n      minX: headerView.getFloat64(36, LITTLE_ENDIAN),\n      minY: headerView.getFloat64(44, LITTLE_ENDIAN),\n      minZ: headerView.getFloat64(68, LITTLE_ENDIAN),\n      minM: headerView.getFloat64(84, LITTLE_ENDIAN),\n      maxX: headerView.getFloat64(52, LITTLE_ENDIAN),\n      maxY: headerView.getFloat64(60, LITTLE_ENDIAN),\n      maxZ: headerView.getFloat64(76, LITTLE_ENDIAN),\n      maxM: headerView.getFloat64(92, LITTLE_ENDIAN)\n    }\n  };\n  if (header.magic !== SHP_MAGIC_NUMBER) {\n    // eslint-disable-next-line\n    console.error(`SHP file: bad magic number ${header.magic}`);\n  }\n  if (header.version !== 1000) {\n    // eslint-disable-next-line\n    console.error(`SHP file: bad version ${header.version}`);\n  }\n  return header;\n}\n"],"file":"parse-shp-header.js"}